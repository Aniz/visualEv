<#@ template inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation" #>
<#@ output extension=".ev" #>
<#@ Ev processor="EvDirectiveProcessor" requires="fileName='Sample.visualEv'" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>

//Generated by visualEvDSL. Generating code in C#.
<#
foreach (Option element in this.EvModel.Elements)
{
	string types = "";
#>
	
add <#= element.OptionType #>
	<#	types = string.Join(
                ",", //Change the value here to separate the strings.
                (from property in element.Properties
                 select property.Name).ToArray());
	if(types != string.Empty){
		types = "types " + types + ".";
	}
	#>	
	<#= types #>
	
	<# foreach(OptionHasFunctions assoc in OptionHasFunctions.GetLinksToFunctions(element)){ #>
<# if (assoc.Var != string.Empty) { #>if <#= assoc.Var #>.<#= assoc.Function.Name #> <# } else { #>def <#= assoc.Function.Name #> <# } #><# } #>

<#    
}
#>