<?xml version="1.0" encoding="utf-8"?>
<xsd:schema id="EvSchema" targetNamespace="http://schemas.microsoft.com/dsltools/Ev" elementFormDefault="qualified" xmlns="http://schemas.microsoft.com/dsltools/Ev" xmlns:core="http://schemas.microsoft.com/VisualStudio/2008/DslTools/Core" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:import id="CoreSchema" namespace="http://schemas.microsoft.com/VisualStudio/2008/DslTools/Core" />
  <!-- EvModel -->
  <xsd:element name="evModel" type="EvModel" substitutionGroup="core:modelElement" />
  <xsd:complexType name="EvModel">
    <xsd:annotation>
      <xsd:documentation>The root in which all other elements are embedded. Appears as a diagram.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: EvModelHasElements -->
          <xsd:element name="elements" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of EvModelHasElements</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice minOccurs="0" maxOccurs="unbounded" >
                  <xsd:element ref="evModelHasElements">
                    <xsd:annotation>
                      <xsd:documentation>[Relationship deriving from EvModelHasElements needs to be serialized in full-form]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element ref="option" >
                    <xsd:annotation>
                      <xsd:documentation>[Target role-player]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:choice>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- dslVersion -->
        <xsd:attribute name="dslVersion" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Version of the model serialized in this file.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Name -->
        <xsd:attribute name="name" type="xsd:string" />
        <!-- Property: Password -->
        <xsd:attribute name="password" type="xsd:string" />
        <!-- Property: Email -->
        <xsd:attribute name="email" type="xsd:string" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- EvModel Moniker -->
  <xsd:element name="evModelMoniker" type="EvModelMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="EvModelMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for EvModel instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Option -->
  <xsd:element name="option" type="Option" substitutionGroup="core:modelElement" />
  <xsd:complexType name="Option">
    <xsd:annotation>
      <xsd:documentation>Elements embedded in the model. Appear as boxes on the diagram.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: OptionHasFunctions -->
          <xsd:element name="functions" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of OptionHasFunctions</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="optionHasFunctions" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of OptionHasFunctions needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <!-- Relationship: OptionHasCategories -->
          <xsd:element name="categories" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of OptionHasCategories</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="optionHasCategories" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of OptionHasCategories needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <!-- Relationship: OptionHasCommands -->
          <xsd:element name="commands" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of OptionHasCommands</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="optionHasCommands" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of OptionHasCommands needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: OptionType -->
        <xsd:attribute name="optionType" type="OptionTypes" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Option Moniker -->
  <xsd:element name="optionMoniker" type="OptionMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="OptionMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Option instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Function -->
  <xsd:element name="function" type="Function" substitutionGroup="core:modelElement" />
  <xsd:complexType name="Function">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Name -->
        <xsd:attribute name="name" type="FunctionTypes" />
        <!-- Property: hasView -->
        <xsd:attribute name="hasView" type="xsd:boolean" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Function Moniker -->
  <xsd:element name="functionMoniker" type="FunctionMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="FunctionMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Function instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Category -->
  <xsd:element name="category" type="Category" substitutionGroup="core:modelElement" />
  <xsd:complexType name="Category">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Name -->
        <xsd:attribute name="name" type="xsd:string" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Category Moniker -->
  <xsd:element name="categoryMoniker" type="CategoryMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="CategoryMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Category instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Command -->
  <xsd:element name="command" type="Command" substitutionGroup="core:modelElement" />
  <xsd:complexType name="Command">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Name -->
        <xsd:attribute name="name" type="CommandTypes" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Command Moniker -->
  <xsd:element name="commandMoniker" type="CommandMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="CommandMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Command instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- EvModelHasElements -->
  <xsd:element name="evModelHasElements" abstract="true" type="EvModelHasElements" substitutionGroup="core:modelElement" />
  <xsd:complexType name="EvModelHasElements" abstract="true" >
    <xsd:annotation>
      <xsd:documentation>Embedding relationship between the Model and Elements</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Option -->
          <xsd:element ref="option" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- EvModelHasElements Moniker -->
  <xsd:element name="evModelHasElementsMoniker" type="EvModelHasElementsMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="EvModelHasElementsMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for EvModelHasElements instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- OptionHasFunctions -->
  <xsd:element name="optionHasFunctions" type="OptionHasFunctions" substitutionGroup="core:modelElement" />
  <xsd:complexType name="OptionHasFunctions">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Function -->
          <xsd:element ref="function" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Param -->
        <xsd:attribute name="param" type="xsd:string" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- OptionHasFunctions Moniker -->
  <xsd:element name="optionHasFunctionsMoniker" type="OptionHasFunctionsMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="OptionHasFunctionsMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for OptionHasFunctions instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- OptionHasCategories -->
  <xsd:element name="optionHasCategories" type="OptionHasCategories" substitutionGroup="core:modelElement" />
  <xsd:complexType name="OptionHasCategories">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Category -->
          <xsd:element ref="category" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- OptionHasCategories Moniker -->
  <xsd:element name="optionHasCategoriesMoniker" type="OptionHasCategoriesMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="OptionHasCategoriesMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for OptionHasCategories instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- OptionHasCommands -->
  <xsd:element name="optionHasCommands" type="OptionHasCommands" substitutionGroup="core:modelElement" />
  <xsd:complexType name="OptionHasCommands">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Command -->
          <xsd:element ref="command" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- OptionHasCommands Moniker -->
  <xsd:element name="optionHasCommandsMoniker" type="OptionHasCommandsMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="OptionHasCommandsMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for OptionHasCommands instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Enum OptionTypes -->
  <xsd:simpleType name="OptionTypes">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="User"/>
      <xsd:enumeration value="Speaker"/>
      <xsd:enumeration value="Organizer"/>
      <xsd:enumeration value="Event"/>
      <xsd:enumeration value="Assignment"/>
      <xsd:enumeration value="Payment"/>
      <xsd:enumeration value="Submission"/>
      <xsd:enumeration value="Reviewer"/>
      <xsd:enumeration value="Activity"/>
      <xsd:enumeration value="Author"/>
      <xsd:enumeration value="Receipt"/>
      <xsd:enumeration value="CheckingCopy"/>
    </xsd:restriction>
  </xsd:simpleType>
  
  <!-- Enum FunctionTypes -->
  <xsd:simpleType name="FunctionTypes">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="askCardInfo"/>
      <xsd:enumeration value="generateBoleto"/>
      <xsd:enumeration value="generateCarne"/>
      <xsd:enumeration value="reportsFrequencyPerActivity"/>
      <xsd:enumeration value="reportsListOfAuthors"/>
      <xsd:enumeration value="checkingCopyAtestado"/>
      <xsd:enumeration value="checkingCopyCertificado"/>
      <xsd:enumeration value="eventProgram"/>
      <xsd:enumeration value="eventImportantDates"/>
      <xsd:enumeration value="reportsFrequencyPerEvent"/>
      <xsd:enumeration value="assignmentInterestConflict"/>
      <xsd:enumeration value="notificationsDeadline"/>
      <xsd:enumeration value="notificationsAceptanceRejection"/>
      <xsd:enumeration value="notificationPaperAssignment"/>
      <xsd:enumeration value="reviewerRoundofReview"/>
      <xsd:enumeration value="submissionInsertAttachment"/>
      <xsd:enumeration value="submissionCompleteInsert"/>
      <xsd:enumeration value="submissionPartialInsert"/>
      <xsd:enumeration value="userSendBugTrackEmail"/>
    </xsd:restriction>
  </xsd:simpleType>
  
  <!-- Enum CommandTypes -->
  <xsd:simpleType name="CommandTypes">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="All"/>
      <xsd:enumeration value="Insert"/>
      <xsd:enumeration value="Update"/>
      <xsd:enumeration value="Search"/>
      <xsd:enumeration value="Remove"/>
      <xsd:enumeration value="ListAll"/>
      <xsd:enumeration value="Management"/>
    </xsd:restriction>
  </xsd:simpleType>
  
</xsd:schema>

